# 工作流名称
name: deployGitHubPages

on:
  # schedule:
  #   # 每天在UTC时间02:00运行
  #   - cron: "00 02 * * *"
  workflow_dispatch: # 允许手动触发
  # --- [核心改造] 注释掉 push 触发器 ---
  # 当推送到主分支时将不再触发此工作流。
  # 如果将来需要恢复，只需取消下面的注释即可。
  # push:
  #   branches:
  #     - main

jobs:
  # --- 任务1: 构建数据和网站文件 ---
  build:
    runs-on: ubuntu-latest
    # 将环境变量提升到 job 级别，供所有 step 使用
    env:
      GOOGLE_API_KEYS: ${{ secrets.GOOGLE_API_KEYS }}
      MODEL_PRIORITY_LIST: ${{ vars.MODEL_PRIORITY_LIST }}
      API_CALL_INTERVAL: ${{ vars.API_CALL_INTERVAL }}
      LANGUAGE: ${{ vars.LANGUAGE }}
      CATEGORIES: ${{ vars.CATEGORIES }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          uv sync

      - name: Setup Git
        run: |
          git config --global user.email "${{ vars.EMAIL }}"
          git config --global user.name "${{ vars.NAME }}"

      - name: Set Target Date
        id: date
        run: echo "TARGET_DATE=$(date -d "yesterday" +"%Y-%m-%d")" >> $GITHUB_OUTPUT

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # 上传 `docs` 目录作为网站文件
          path: ./docs

  # --- 任务2: 部署网站 ---
  deploy:
    # 依赖于 'build' 任务成功完成
    needs: build
    # 部署任务需要的权限
    permissions:
      pages: write      # 写入GitHub Pages
      id-token: write   # 用于身份验证
    
    # 部署环境的配置
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
